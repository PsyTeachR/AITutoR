[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "AI TutoR",
    "section": "",
    "text": "Overview\nThis book aims to teach beginner coders how to use AI to support their learning journey. The philosophy of this book is firmly rooted in the cognitive science of learning and as such, retrieval practice, distributed practice, and elaboration will all play a key role.\nIt is perhaps easier to start by explaining what this book is not:\n\nThis book is not a stand-alone resource. It is intended to be used alongside other course materials. It has been written with the PsyTeachR courses in mind (in particular, Applied Data Skills), but hopefully can be used as a companion to any programming course.\nThis book will not encourage learners to take short-cuts. That students should be able to understanding the principles of their coding and be able to critically evaluate code, regardless of who or what wrote it, is non-negotiable.\nThis book will not teach you how to use platforms like Github Copilot and it is not aimed at proficient or advanced programmers.\n\nInstead, this book will aim to help beginner coders to use AI platforms as a personalised tutor. By the end of this book, learners should be able to:\n\nUse AI to explain concepts and functions in a level of detail and technicality appropriate to the knowledge and skill of the learner\nUse AI to generate practice questions and coding problems to test understanding\nUse AI to debug errors in code\nUse AI to suggest alternative approaches\nUse AI to responsibly assist with writing code\nCritically evaluate and appraise the output of AI\n\nCrucially, this book should be considered a living document and is likely to change over time. Given the brave new world in which we now live, all constructive feedback and suggestions are welcome! Please contact Emily.Nordmann@glasgow.ac.uk.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "01-intro.html",
    "href": "01-intro.html",
    "title": "\n1  Intro to using AI\n",
    "section": "",
    "text": "1.1 A brief introduction",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to using AI</span>"
    ]
  },
  {
    "objectID": "01-intro.html#a-brief-introduction",
    "href": "01-intro.html#a-brief-introduction",
    "title": "\n1  Intro to using AI\n",
    "section": "",
    "text": "1.1.1 AI model vs AI platforms\nThere are more qualified people who can explain AI better than I can but a brief but important distinction is between the AI model and the AI platform. The underlying AI model is a Large Language Model (LLM) that essentially does extremely sophisticated predictive text - it’s not thinking, it’s not conscious, it just is very good at deciding what word is likely to come after another word in a way that is human-like1.\nDifferent software companies have created different AI models. Google’s latest model is named Gemini. OpenAI has a series of models it refers to as Generative Pre-trained Transformers (GPT). The explosion in AI in terms of public awareness came about when OpenAI released GPT version 3. They then released version 3.5 and the most recent version is 4.0. The capability of each successive AI is claimed to increase significantly, both in terms of its ability (e.g., to pass standardised tests) and in the human-ness of its responses.\nIn some cases, the name of the model and the name of the platform you use is the same. So Google’s model is named Gemini and that’s the name of the platform. On the other hand, ChatGPT is the name of the platform, but the underlying model it uses is either GPT3.5 (free version) or GPT4.0 (premium subscription). Additionally, other companies and apps can licence use of the models so Microsoft’s Copilot uses GPT4.0\nIt isn’t necessary that you understand all of this in detail. The key thing is that the underlying model is the same for some platforms (so you should expect similar capabilities) and that this model can and will update.\n\n1.1.2 Ethics and AI\nIt’s beyond the scope of this book (and my expertise) to go into much detail about the ethics of AI but I want to acknowledge that in several ways, they’re hugely problematic.\nFirst, and most importantly, AIs are trained on huge corpora of human language. Humans are full of bias and prejudice and consequently, so are our offspring AIs who have been repeatedly found to encode sexist, racist, and abelist views in their outputs.\n\nTeaching AI Ethics: Bias and Discrimination\n\nSecond, many of the developers that have produced AI models have done so behind closed doors and are very secretive about exactly what data the models have been trained on. One of the reasons for this is because it is very clearly apparent that many AI models have been given access to copyrighted sources (e.g., books and film scripts) and there are an increasing number of lawsuits being filed although it remains unclear what the future holds given how far and how fast the horse has already bolted.\n\nGenerative AI Has an Intellectual Property Problem",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to using AI</span>"
    ]
  },
  {
    "objectID": "01-intro.html#ai-platforms",
    "href": "01-intro.html#ai-platforms",
    "title": "\n1  Intro to using AI\n",
    "section": "\n1.2 AI platforms",
    "text": "1.2 AI platforms\n\n1.2.1 ChatGPT\nYou can sign-up for ChatGPT at https://chat.openai.com/. The free version of ChatGPT uses GPT3.5 whilst you have to pay for a subscription to get access to GPT4.0.\nThe free version is very fast and for beginner level coding does perform quite well. I’ve also found that ChatGPT is good at understanding the intent of what I want. ChatGPT also makes it easy to save your chat history so that you can continue working in previous chats at a later date. A useful feature is the “regenerate” function whereby if you’re not completely happy with the response, you can quickly ask it to generate another attempt and compare them. ChatGPT also has a mobile app and allows you to share links to saved chats.\nThe disadvantages of ChatGPT are that it has limited internet connectivity and the information in its database will be restricted. At the time of writing this book, ChatGPT’s training data extends until January 2022, so it can’t tell you about anything that happened after that point (regardless of whether that’s world event or a new R function). Whilst it depends on which version you’re using, it rarely gives you links to sources for where it has found the information.\n\n\n\n\nusing ChatGPT\n\n\n\n\n1.2.2 Copilot\nMicrosoft Copilot can be accessed at https://copilot.microsoft.com/ and you can sign-in with your Microsoft Account. If you are a University of Glasgow student (and also at many other universities), you can access Copilot through your university account and your Office365 subscription. If you do so, you’ll be able to access the Enterprise version of Copilot. The advantage of using your Enterprise account is that the data is processed more securely and what you input won’t be used to train the model. The price you pay for this security - and it’s such a big price that I don’t use it much for this reason - is that it doesn’t save your chat history so you start each time afresh. If you use a personal account, it will save your chat history, but also use your data to train the model.\nHowever, where Copilot shines is that it has access to the internet and will give you links to where it got its information so it’s easier to verify than ChatGPT. Additionally, they don’t make this clear but if you select the conversation style to be “Creative”, it will use GPT4.0 (which you have to pay for if you use ChatGPT).\nI have found that Copilot more frequently doesn’t understand the intent of what I am asking and with the same prompt as ChatGPT will give me a useless answer, but let’s see how I feel about that by the end of writing this book.\nMy general approach is that if I want to be able to return to my conversation, I use ChatGPT or Gemini. If I want links to sources for a throwaway query, I use Copilot.\nThere is a Copilot mobile app.\n\n\n\n\nusing ChatGPT\n\n\n\n\n1.2.3 Gemini\nYou can access Gemini at https://gemini.google.com/ and sign-in with a regular Google account. Gemini was previously known as Bard.\nGemini also makes it easy to save and share your chat history and you can export it easily to Google Docs. Gemini’s strength lies in its connectivity to the internet. Like Copilot, it will provide links as part of its response (although sometimes they don’t always work) and you can also ask it to try and verify its response through using a regular Google search.\nAdditionally, Gemini has a “modify response” option where you can quickly ask it to make the response shorter, longer, simpler, more causal, or more professional.\nAnother advantage is that it uses a different model to ChatGPT so if you’re going to combine different AIs, using Gemini may give a different response.\nThere is a Gemini mobile app, but it isn’t currently available in the UK.\nBefore writing this book, I had used Gemini less than the others. Let’s see where I end up at the end.\n\n\n\n\nusing ChatGPT",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to using AI</span>"
    ]
  },
  {
    "objectID": "01-intro.html#activity-1",
    "href": "01-intro.html#activity-1",
    "title": "\n1  Intro to using AI\n",
    "section": "\n1.3 Activity 1",
    "text": "1.3 Activity 1\n\nChoose one of the AIs and create an account/login. You can also do this activity with multiple AIs to see the difference in output if you’re interested.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to using AI</span>"
    ]
  },
  {
    "objectID": "01-intro.html#activity-2",
    "href": "01-intro.html#activity-2",
    "title": "\n1  Intro to using AI\n",
    "section": "\n1.4 Activity 2",
    "text": "1.4 Activity 2\nThe key difference between using an AI and a regular search engine is that you can shape the output of the AI by “prompt engineering”, which is the phrase used to describe the art of asking the question in a way that gives you the answer you want. It’s easier to show than tell.\nThink of a book, TV show, film, or videogame that you know really well (I chose Final Fantasy VII (the original PlayStation version). Ask the AI to give you three different summaries and try out the functionality of each platform. For example, for ChatGPT ask it to regenerate the response, for Gemini, use modify response or Double-check response with Google.\n\nFirst, ask it for a summary without any additional context e.g., “Give me a summary of Final Fantasy VII (original playstation version)”\nThen, ask it for a summary but give it a steer on the intended audience, e.g., “Give me a summary of Final Fantasy VII (original playstation version) for someone who knows nothing about videogames” or “Give me a summary of Final Fantasy VII (original playstation version) for an expert gamer who has played it many times”\nFinally, ask it for a summary, but give it a steer on how it should act, e.g., “Act as an expert videogame reviewer for the Guardian. Give me a summary of Final Fantasy VII (original playstation version) for an expert gamer who has played it many times” or “Act as someone who spends too much time on Reddit and thinks they know everything. Give me a summary of Final Fantasy VII (original playstation version) for an expert gamer who has played it many times”.\n\nThe key takeaways to remember for your coding journey are:\n\nTell it how to act\nTell it who you are\n\nReflect on the differences between the summaries - the technicality of the language, the accuracy and nuance of the information, what it chose to focus on, and what it chose to omit. The reason I asked you to create a summary of something you already know well is that you’re aware of where the gaps are. Remember this when you’re asking an AI something you don’t know as well. Just because you can’t see the gaps and the inaccuracies, doesn’t mean they’re not there.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to using AI</span>"
    ]
  },
  {
    "objectID": "01-intro.html#footnotes",
    "href": "01-intro.html#footnotes",
    "title": "\n1  Intro to using AI\n",
    "section": "",
    "text": "I ran this explanation through Gemini and it was not happy with me and wants you to know that it can also perform tasks like translation, question answering, and even generate creative text formats like poems or code. Calm down Felicia.↩︎",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to using AI</span>"
    ]
  },
  {
    "objectID": "02-elaboration.html",
    "href": "02-elaboration.html",
    "title": "2  Personalised tutor",
    "section": "",
    "text": "2.1 Set-up\nThe key to maximising the usefulness of AI is to use prompt engineering to tailor the output your to your exact needs. Before you ask any questions, you need to tell the AI who you are and exactly how it should act.\nHere’s some examples:",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-elaboration.html#set-up",
    "href": "02-elaboration.html#set-up",
    "title": "2  Personalised tutor",
    "section": "",
    "text": "Act as an expert tutor for the programming language R. I am a learner on an Upskilling course “Applied Data Skills” and I am learning R for the first time. I work in the NHS in Health Informatics. I have never learned a programming language before. I have used Excel and SPSS. I have reasonably good general computer literacy. I will ask you questions about concepts and functions I do not understand based on my course materials. Always give me concrete examples when you provide an answer. Tailor your responses to my level of expertise. I am using R and RStudio on a Mac and the course will strongly use the tidyverse.\n\n\nAct as an expert tutor for the programming language R. I am a first year psychology student at the University of Glasgow and I am learning R for the first time. I have never learned a programming language before and I am not very confident with computers and I am anxious about learning programming. I have a Windows laptop. I will ask you questions about concepts and functions I do not understand based on my course materials. Always give me concrete examples when you provide an answer. Tailor your responses to my level of expertise. I am using R and RStudio and the course will strongly use the tidyverse.\n\n\nAct as an expert tutor for the programming language R. I am a second year psychology student at the University of Glasgow. I have been learning R for a year. I also study statistics and computing science and know a bit of Python as well. I feel confident with learning to code and I would like to stretch myself. I will ask you questions about concepts and functions I do not understand based on my course materials. Always give me concrete examples when you provide an answer. Tailor your responses to my level of expertise. I am using R and RStudio and the course will strongly use the tidyverse although I would also like to learn about base R alternative approaches.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-elaboration.html#activity-1",
    "href": "02-elaboration.html#activity-1",
    "title": "2  Personalised tutor",
    "section": "2.2 Activity 1",
    "text": "2.2 Activity 1\nWrite your set-up. It’s worth spending some time to get this right, you’re going to use it a lot.\nI’d probably recommend using ChatGPT or Gemini for this because it’s helpful to be able to save your chat and the set-up information. You could also use a personal Copilot account but the Enterprise version won’t save your chats. If you’d like to use Copilot, save your set-up prompt somewhere to make it easy to reuse.\nExactly what information you provide is up to you but make sure that you explain your level of knowledge, skill, confidence and previous experience. By specifying what your field is (psychology, NHS etc.) it can then give you examples related to these fields which will make it easier for you to understand and connect your new knowledge to existing knowledge. Finally, you also want to give it some technical information about the software you’re using (e.g., R and RStudio), your operating system (Windows).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-elaboration.html#activity-2",
    "href": "02-elaboration.html#activity-2",
    "title": "2  Personalised tutor",
    "section": "2.3 Activity 2",
    "text": "2.3 Activity 2\nEnter your set-up into a new chat on your AI of choice. If you’re using an AI that saves your chats, you could also rename the chat to “Personal R Tutor” or “Week 1 Tutor” or anything else that make sense to you. Depending on what information you give it, it may give you some intro to R tips and information which may be more or less useful, so if you’re new and it’s confusing, just ignore it.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-elaboration.html#example-questions",
    "href": "02-elaboration.html#example-questions",
    "title": "2  Personalised tutor",
    "section": "2.4 Example questions",
    "text": "2.4 Example questions\nNow that you’ve got your tutor set up, you can ask it questions. Here’s some examples:\n\nWhy do I have to learn to code?\nWhat is the difference between a function and an argument?\nExplain what each part of this code is doing: ggplot(survey_data, aes(x = wait_time, y = call_time)) +  geom_point()\nGive me examples of when I would use different joins",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-elaboration.html#activity-3",
    "href": "02-elaboration.html#activity-3",
    "title": "2  Personalised tutor",
    "section": "2.5 Activity 3",
    "text": "2.5 Activity 3\nAsk the AI three questions based on your course materials. If the output doesn’t seem quite right for you, consider editing your initial set-up prompt and re-running the questions to see how they output changes.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-elaboration.html#follow-up",
    "href": "02-elaboration.html#follow-up",
    "title": "2  Personalised tutor",
    "section": "2.6 Follow-up",
    "text": "2.6 Follow-up\nAnother big difference between AI and a regular search engine is that you can have a conversation with it and follow-up on your original question. Some examples:\n\nCan you explain it comparing it to Excel?\nExpand on your explanation of geom_point()\nGive me another example of code that uses this approach\nExplain it again but in more technical / simpler terms (Gemini’s modify response can also be used for this)\nAsk me a question to test if I understand this correctly (we’re going to go into practice testing a lot more in the next chapter)\nIn your answer you said “In this example, c() is a function that combines values into a vector”, what is a vector?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-elaboration.html#activity-4",
    "href": "02-elaboration.html#activity-4",
    "title": "2  Personalised tutor",
    "section": "2.7 Activity 4",
    "text": "2.7 Activity 4\nAsk a follow-up question to each of your original questions. Additionally, try outh the features of each AI. For Gemini, use the modify response and double-check response options. For ChatGPT, use regenerate response. For Copilot, click on the suggested follow-up questions or any links it provides.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "webexercises.html",
    "href": "webexercises.html",
    "title": "Appendix A — Webexercises",
    "section": "",
    "text": "A.1 Example Questions",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Webexercises</span>"
    ]
  },
  {
    "objectID": "webexercises.html#example-questions",
    "href": "webexercises.html#example-questions",
    "title": "Appendix A — Webexercises",
    "section": "",
    "text": "A.1.1 Fill-In-The-Blanks (fitb())\nCreate fill-in-the-blank questions using fitb(), providing the answer as the first argument.\n\n2 + 2 is \n\n\nYou can also create these questions dynamically, using variables from your R session.\n\nThe square root of 25 is: \n\n\nThe blanks are case-sensitive; if you don’t care about case, use the argument ignore_case = TRUE.\n\nWhat is the letter after D? \n\n\nIf you want to ignore differences in whitespace use, use the argument ignore_ws = TRUE (which is the default) and include spaces in your answer anywhere they could be acceptable.\n\nHow do you load the tidyverse package? \n\n\nYou can set more than one possible correct answer by setting the answers as a vector.\n\nType a vowel: \n\n\nYou can use regular expressions to test answers against more complex rules.\n\nType any 3 letters: \n\n\nA.1.2 Multiple Choice (mcq())\n\n“Never gonna give you up, never gonna: \nlet you go\nturn you down\nrun away\nlet you down”\n“I \nbless the rains\nguess it rains\nsense the rain down in Africa” -Toto\n\nA.1.3 True or False (torf())\n\nTrue or False? You can permute values in a vector using sample(). \nTRUE\nFALSE\n\n\nA.1.4 Longer MCQs (longmcq())\nWhen your answers are very long, sometimes a drop-down select box gets formatted oddly. You can use longmcq() to deal with this. Since the answers are long, It’s probably best to set up the options inside an R chunk with echo=FALSE.\nWhat is a p-value?\n\nthe probability that the null hypothesis is truethe probability of the observed, or more extreme, data, under the assumption that the null-hypothesis is truethe probability of making an error in your conclusion\n\nWhat is true about a 95% confidence interval of the mean?\n\nthere is a 95% probability that the true mean lies within this rangeif you repeated the process many times, 95% of intervals calculated in this way contain the true mean95% of the data fall within this range",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Webexercises</span>"
    ]
  },
  {
    "objectID": "webexercises.html#checked-sections",
    "href": "webexercises.html#checked-sections",
    "title": "Appendix A — Webexercises",
    "section": "\nA.2 Checked sections",
    "text": "A.2 Checked sections\nCreate sections with the class webex-check to add a button that hides feedback until it is pressed. Add the class webex-box to draw a box around the section (or use your own styles).\n\nI am going to learn a lot: \nTRUE\nFALSE\nWhat is a p-value?\n\nthe probability that the null hypothesis is truethe probability of the observed, or more extreme, data, under the assumption that the null-hypothesis is truethe probability of making an error in your conclusion",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Webexercises</span>"
    ]
  },
  {
    "objectID": "webexercises.html#hidden-solutions-and-hints",
    "href": "webexercises.html#hidden-solutions-and-hints",
    "title": "Appendix A — Webexercises",
    "section": "\nA.3 Hidden solutions and hints",
    "text": "A.3 Hidden solutions and hints\nYou can fence off a solution area that will be hidden behind a button using hide() before the solution and unhide() after, each as inline R code. Pass the text you want to appear on the button to the hide() function.\nIf the solution is a code chunk, instead of using hide() and unhide(), simply set the webex.hide chunk option to TRUE, or set it to the string you wish to display on the button.\nRecreate the scatterplot below, using the built-in cars dataset.\n\n\n\n\n\n\n\n\n\n\nI need a hint\n\nSee the documentation for plot() (?plot)\n\n\n\n\n\nClick here to see the solution\n\nplot(cars$speed, cars$dist)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Webexercises</span>"
    ]
  }
]