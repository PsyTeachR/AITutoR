[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "AI TutoR",
    "section": "",
    "text": "Overview\nThis book aims to teach beginner coders how to use AI to support their learning journey. The philosophy of this book is firmly rooted in the cognitive science of learning and as such, retrieval practice, distributed practice, and elaboration will all play a key role.\nIt is perhaps easier to start by explaining what this book is not:\n\nThis book is not a stand-alone resource. It is intended to be used alongside other course materials. It has been written with the PsyTeachR courses in mind (in particular, Applied Data Skills), but hopefully can be used as a companion to any programming course.\nThis book will not encourage learners to take short-cuts. That students should be able to understanding the principles of their coding and be able to critically evaluate code, regardless of who or what wrote it, is non-negotiable.\nThis book will not teach you how to use platforms like Github Copilot and it is not aimed at proficient or advanced programmers.\n\nInstead, this book will aim to help beginner coders to use AI platforms as a personalised tutor. By the end of this book, learners should be able to:\n\nUse AI to explain concepts and functions in a level of detail and technicality appropriate to the knowledge and skill of the learner\nUse AI to generate practice questions and coding problems to test understanding\nUse AI to debug errors in code\nUse AI to suggest alternative approaches\nUse AI to responsibly assist with writing code\nCritically evaluate and appraise the output of AI\n\n\n\n\n\n\n\nWarning\n\n\n\nUsing AI to write code is the last thing this book will cover, and that is an intentional choice. Using AI can superpower your coding but only once you have a solid foundation of knowledge. You need to be able to evaluate what it produces and you need to know what to ask it with enough specificity. Using AI to write code you don’t understand is as dangerous as it is irresponsible.\n\n\n\n\n\n\n\n\nCaution\n\n\n\nThis book should be considered a living document and is likely to change over time. Given the brave new world in which we now live, all constructive feedback and suggestions are welcome! If you have any feedback or suggestions, please provide it via Forms.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "01-intro.html",
    "href": "01-intro.html",
    "title": "\n1  Intro to using AI\n",
    "section": "",
    "text": "1.1 A brief introduction",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to using AI</span>"
    ]
  },
  {
    "objectID": "01-intro.html#a-brief-introduction",
    "href": "01-intro.html#a-brief-introduction",
    "title": "\n1  Intro to using AI\n",
    "section": "",
    "text": "1.1.1 AI model vs AI platforms\nThere are more qualified people who can explain AI better than I can but a brief but important distinction is between the AI model and the AI platform. The underlying AI model is a Large Language Model (LLM) that essentially does extremely sophisticated predictive text - it’s not thinking, it’s not conscious, it just is very good at deciding what word is likely to come after another word in a way that is human-like1.\nDifferent software companies have created different AI models. Google’s latest model is named Gemini. OpenAI has a series of models it refers to as Generative Pre-trained Transformers (GPT). The explosion in AI in terms of public awareness came about when OpenAI released GPT version 3. They then released version 3.5 and the most recent version is 4.0. The capability of each successive AI is claimed to increase significantly, both in terms of its ability (e.g., to pass standardised tests) and in the human-ness of its responses.\nIn some cases, the name of the model and the name of the platform you use are the same. So Google’s model is named Gemini and that’s the name of the platform. On the other hand, ChatGPT is the name of the platform, but the underlying model it uses is either GPT3.5 (free version) or GPT4.0 (premium subscription). Additionally, other companies and apps can licence use of the models so Microsoft’s Copilot uses GPT4.0\nIt isn’t necessary that you understand all of this in detail. The key thing is that the underlying model is the same for some platforms (so you should expect similar capabilities) and that this model can and will update.\n\n1.1.2 Ethics and AI\nIt’s beyond the scope of this book (and my expertise) to go into much detail about the ethics of AI but I want to acknowledge that in several ways, they’re hugely problematic.\nFirst, and most importantly, AIs are trained on huge corpora of human language. Humans are full of bias and prejudice and consequently, so are our offspring AIs who have been repeatedly found to encode sexist, racist, and abelist views in their outputs.\n\nTeaching AI Ethics: Bias and Discrimination\n\nSecond, many of the developers that have produced AI models have done so behind closed doors and are very secretive about exactly what data the models have been trained on. One of the reasons for this is because it is very clearly apparent that many AI models have been given access to copyrighted sources (e.g., books and film scripts) and there are an increasing number of lawsuits being filed although it remains unclear what the future holds given how far and how fast the horse has already bolted.\n\nGenerative AI Has an Intellectual Property Problem\n\nThird, whilst the use of AI has been touted as a solution to help us manage climate change, it’s also a direct contributor to the problem because of the energy demands.\n\nAs Use of A.I. Soars, So Does the Energy and Water It Requires",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to using AI</span>"
    ]
  },
  {
    "objectID": "01-intro.html#ai-platforms",
    "href": "01-intro.html#ai-platforms",
    "title": "\n1  Intro to using AI\n",
    "section": "\n1.2 AI platforms",
    "text": "1.2 AI platforms\n\n1.2.1 ChatGPT\nYou can sign-up for ChatGPT at https://chat.openai.com/. The free version of ChatGPT uses GPT3.5 whilst you have to pay for a subscription to get access to GPT4.0.\nThe free version is very fast and for beginner level coding does perform quite well. I’ve also found that ChatGPT is good at understanding the intent of what I want. ChatGPT also makes it easy to save your chat history so that you can continue working in previous chats at a later date. A useful feature is the “regenerate” function whereby if you’re not completely happy with the response, you can quickly ask it to generate another attempt and compare them. ChatGPT has a mobile app and allows you to share links to saved chats.\nThe disadvantages of ChatGPT are that it has limited internet connectivity and the information in its database will be restricted. At the time of writing this book, ChatGPT’s training data extends until January 2022, so it can’t tell you about anything that happened after that point (regardless of whether that’s world event or a new R function). Whilst it does depend on which version you’re using, it rarely gives you links to sources for where it has found the information.\n\n\n\n\nusing ChatGPT\n\n\n\n\n1.2.2 Copilot\nMicrosoft Copilot can be accessed at https://copilot.microsoft.com/ and you can sign-in with your Microsoft Account. If you are a University of Glasgow student (and also at many other universities), you can access Copilot through your university account and your Office365 subscription. If you do so, you’ll be able to access the Enterprise version of Copilot. The advantage of using your Enterprise account is that the data is processed more securely and what you input won’t be used to train the model. The price you pay for this security - and it’s such a big price that I don’t use it much for this reason - is that it doesn’t save your chat history so you start each time afresh. If you use a personal account, it will save your chat history, but also use your data to train the model.\nHowever, where Copilot shines is that it has access to the internet and will give you links to where it got its information so it’s easier to verify the output than ChatGPT. Additionally, they don’t make this clear but if you select the conversation style to be “Creative”, it will use GPT4.0 (which you have to pay for if you use ChatGPT).\nI have found that Copilot more frequently doesn’t understand the intent of what I am asking and with the same prompt as ChatGPT will give me a useless answer, but let’s see how I feel about that by the end of writing this book.\nMy general approach is that if I want to be able to return to my conversation, I use ChatGPT or Gemini. If I want links to sources, I use Copilot.\n\n\n\n\nusing ChatGPT\n\n\n\n\n1.2.3 Gemini\nYou can access Gemini at https://gemini.google.com/ and sign-in with a regular Google account. Gemini was previously known as Bard.\nGemini also makes it easy to save and share your chat history and you can export it easily to Google Docs. Gemini’s strength lies in its connectivity to the internet. Like Copilot, it will provide links as part of its response (although sometimes they don’t always work) and you can also ask it to try and verify its response through using a regular Google search.\nAdditionally, Gemini has a “modify response” option where you can quickly ask it to make the response shorter, longer, simpler, more causal, or more professional.\nAnother advantage is that it uses a different model to ChatGPT so if you’re going to combine different AIs, using Gemini may give a different response.\nThere is a Gemini mobile app, but it isn’t currently available in the UK.\nBefore writing this book, I had used Gemini less than the others. Let’s see where I end up at the end.\n\n\n\n\nusing ChatGPT",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to using AI</span>"
    ]
  },
  {
    "objectID": "01-intro.html#activity-1",
    "href": "01-intro.html#activity-1",
    "title": "\n1  Intro to using AI\n",
    "section": "\n1.3 Activity 1",
    "text": "1.3 Activity 1\n\nChoose one of the AIs and create an account/login. You can also do this activity with multiple AIs to see the difference in output if you’re interested.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to using AI</span>"
    ]
  },
  {
    "objectID": "01-intro.html#activity-2",
    "href": "01-intro.html#activity-2",
    "title": "\n1  Intro to using AI\n",
    "section": "\n1.4 Activity 2",
    "text": "1.4 Activity 2\nThe key difference between using an AI and a regular search engine is that you can shape the output of the AI by “prompt engineering”, which is the phrase used to describe the art of asking the question in a way that gives you the answer you want. It’s easier to show than tell.\nThink of a book, TV show, film, or videogame that you know really well. I chose Final Fantasy VII (the original PlayStation version). Ask the AI to give you three different summaries and try out the functionality of each platform. For example, for ChatGPT ask it to regenerate the response, for Gemini, use modify response or Double-check response with Google.\n\nFirst, ask it for a summary without any additional context e.g., “Give me a summary of Final Fantasy VII (original playstation version)”\nThen, ask it for a summary but give it a steer on the intended audience, e.g., “Give me a summary of Final Fantasy VII (original playstation version) for someone who knows nothing about videogames” or “Give me a summary of Final Fantasy VII (original playstation version) for an expert gamer who has played it many times”\nFinally, ask it for a summary, but give it a steer on how it should act, e.g., “Act as an expert videogame reviewer for the Guardian. Give me a summary of Final Fantasy VII (original playstation version) for an expert gamer who has played it many times” or “Act as someone who spends too much time on Reddit and thinks they know everything. Give me a summary of Final Fantasy VII (original playstation version) for an expert gamer who has played it many times”.\n\nThe key takeaways to remember for your coding journey are:\n\nTell it how to act\nTell it who you are\n\nReflect on the differences between the summaries - the technicality of the language, the accuracy and nuance of the information, what it chose to focus on, and what it chose to omit. The reason I asked you to create a summary of something you already know well is that you’re aware of where the gaps are. Remember this when you’re asking an AI something you don’t know as well. Just because you can’t see the gaps, inaccuracies, and biases, doesn’t mean they’re not there.\n\n\n\n\n\n\nCaution\n\n\n\nThis book should be considered a living document and is likely to change over time. Given the brave new world in which we now live, all constructive feedback and suggestions are welcome! If you have any feedback or suggestions, please provide it via Forms.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to using AI</span>"
    ]
  },
  {
    "objectID": "01-intro.html#footnotes",
    "href": "01-intro.html#footnotes",
    "title": "\n1  Intro to using AI\n",
    "section": "",
    "text": "I ran this explanation through Gemini and it was not happy with me and wants you to know that it can also perform tasks like translation, question answering, and even generate creative text formats like poems or code. Calm down Felicia.↩︎",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro to using AI</span>"
    ]
  },
  {
    "objectID": "02-personalise.html",
    "href": "02-personalise.html",
    "title": "2  Personalised tutor",
    "section": "",
    "text": "2.1 Set-up\nThe key to maximising the usefulness of AI is to use prompt engineering to tailor the output your to your exact needs. Before you ask any questions, you need to tell the AI who you are and exactly how it should act.\nHere’s some examples:",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-personalise.html#set-up",
    "href": "02-personalise.html#set-up",
    "title": "2  Personalised tutor",
    "section": "",
    "text": "Act as an expert tutor for the programming language R. I am a learner on an Upskilling course “Applied Data Skills” and I am learning R for the first time. I work in the NHS in Health Informatics. I have never learned a programming language before. I have used Excel and SPSS. I have reasonably good general computer literacy. I will ask you questions about concepts and functions I do not understand based on my course materials. Always give me concrete examples when you provide an answer. Tailor your responses to my level of expertise. I am using R and RStudio on a Mac and the course will strongly use the tidyverse.\n\n\nAct as an expert tutor for the programming language R. I am a first year psychology student at the University of Glasgow and I am learning R for the first time. I have never learned a programming language before and I am not very confident with computers and I am anxious about learning programming. I have a Windows laptop. I will ask you questions about concepts and functions I do not understand based on my course materials. Always give me concrete examples when you provide an answer. Tailor your responses to my level of expertise. I am using R and RStudio and the course will strongly use the tidyverse.\n\n\nAct as an expert tutor for the programming language R. I am a second year psychology student at the University of Glasgow. I have been learning R for a year. I also study statistics and computing science and know a bit of Python as well. I feel confident with learning to code and I would like to stretch myself. I will ask you questions about concepts and functions I do not understand based on my course materials. Always give me concrete examples when you provide an answer. Tailor your responses to my level of expertise. I am using R and RStudio and the course will strongly use the tidyverse although I would also like to learn about base R alternative approaches.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-personalise.html#sec-setup",
    "href": "02-personalise.html#sec-setup",
    "title": "2  Personalised tutor",
    "section": "2.2 Activity 1: Write your set-up",
    "text": "2.2 Activity 1: Write your set-up\nWrite your set-up. It’s worth spending some time to get this right, you’re going to use it a lot.\nI’d probably recommend using ChatGPT or Gemini for this because it’s helpful to be able to save your chat and the set-up information. You could also use a personal Copilot account but the Enterprise version won’t save your chats. If you’d like to use Copilot, save your set-up prompt somewhere to make it easy to reuse.\nExactly what information you provide is up to you but make sure that you explain your level of knowledge, skill, confidence and previous experience. By specifying what your field is (psychology, NHS etc.) it can then give you examples related to these fields which will make it easier for you to understand and connect your new knowledge to existing knowledge. Finally, you also want to give it some technical information about the software you’re using (e.g., R and RStudio) and your operating system (Windows).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-personalise.html#activity-2-instruct-the-ai",
    "href": "02-personalise.html#activity-2-instruct-the-ai",
    "title": "2  Personalised tutor",
    "section": "2.3 Activity 2: Instruct the AI",
    "text": "2.3 Activity 2: Instruct the AI\nEnter your set-up into a new chat on your AI of choice. If you’re using an AI that saves your chats, you could also rename the chat to “Personal R Tutor” or “Week 1 Tutor” or anything else that make sense to you. Depending on what information you give it, it may give you some intro to R tips and information which may be more or less useful, so if you’re new and it’s confusing, just ignore it.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-personalise.html#example-questions",
    "href": "02-personalise.html#example-questions",
    "title": "2  Personalised tutor",
    "section": "2.4 Example questions",
    "text": "2.4 Example questions\nNow that you’ve got your tutor set up, you can ask it questions. Here’s some examples:\n\nWhy do I have to learn to code?\nWhat is the difference between a function and an argument?\nExplain what each part of this code is doing: ggplot(survey_data, aes(x = wait_time, y = call_time)) +  geom_point()\nGive me examples of when I would use different joins",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-personalise.html#activity-3-questions",
    "href": "02-personalise.html#activity-3-questions",
    "title": "2  Personalised tutor",
    "section": "2.5 Activity 3: Questions",
    "text": "2.5 Activity 3: Questions\nAsk the AI three questions based on your course materials. If the output doesn’t seem at the right level for you, consider editing your initial set-up prompt and re-running the questions to see how the output changes.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-personalise.html#conversation",
    "href": "02-personalise.html#conversation",
    "title": "2  Personalised tutor",
    "section": "2.6 Conversation",
    "text": "2.6 Conversation\nAnother big difference between AI and a regular search engine is that you can have a conversation with it and follow-up on your original question. Some examples:\n\nCan you explain it again but compare it to Excel?\nExpand on your explanation of geom_point()\nGive me another example of code that uses this approach\nExplain it again but in more technical / simpler terms (Gemini’s modify response can also be used for this)\nAsk me a question to test if I understand this correctly (we’re going to go into practice testing a lot more in the next chapter)\nIn your answer you said “In this example, c() is a function that combines values into a vector”, what is a vector?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "02-personalise.html#activity-4-follow-up",
    "href": "02-personalise.html#activity-4-follow-up",
    "title": "2  Personalised tutor",
    "section": "2.7 Activity 4: Follow-up",
    "text": "2.7 Activity 4: Follow-up\nAsk a follow-up question to each of your original questions. Additionally, try out the features of each AI. For Gemini, use the modify response and double-check response options. For ChatGPT, use regenerate response. For Copilot, click on the suggested follow-up questions or any links it provides.\n\n\n\n\n\n\nCaution\n\n\n\nThis book should be considered a living document and is likely to change over time. Given the brave new world in which we now live, all constructive feedback and suggestions are welcome! If you have any feedback or suggestions, please provide it via Forms.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Personalised tutor</span>"
    ]
  },
  {
    "objectID": "03-testing.html",
    "href": "03-testing.html",
    "title": "\n3  Practice testing\n",
    "section": "",
    "text": "3.1 Activity 1: Set-up\nIn your AI of choice, create a new chat and give it your set-up blurb that you created in Chapter Section 2.2.\nIt would be helpful to have a specific chapter of your course in mind to work with. For the PsyTeachR courses, we’ll be using the Intended Learning Outcomes, functions used, and glossary to help instruct the AI. If you’re not working through a course, or it’s not a PsyTeachR course, it would be helpful to have a list of functions or skills that you want to test. As an example, we’ll use Chapter 3 of Applied Data Skills.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice testing</span>"
    ]
  },
  {
    "objectID": "03-testing.html#activity-2-question-prompt",
    "href": "03-testing.html#activity-2-question-prompt",
    "title": "\n3  Practice testing\n",
    "section": "\n3.2 Activity 2: Question prompt",
    "text": "3.2 Activity 2: Question prompt\nThen we need to give it instructions for how to create the questions. There are other question types you could ask it for but as a starter pack, this should be useful.\n\nI would like you to generate practice questions to help consolidate my learning based on the learning outcomes, functions, and glossary used in my course materials this week that I will provide to you. I will ask you for three different types of questions.\n\n\nFirst, multiple choice questions. Each question should have 4 response options and one correct answer. Ask them one at a time and explain the answer to me and why the other options are incorrect after I provide my answer.\n\n\nSecond, coding problems. Give me short problems that I need to provide the answer to. These should be fully reproducible and use datasets built into R or the tidyverse. Where necessary, give me the code to load any packages or datasets that I will need.\n\n\nThird, error mode. Give me code that will result in an error. Explain what the code is intended to do and then ask me to figure out what the error is, and then fix it. The errors should be plausible errors that a beginner would be likely to make but do not tell me what the error is. The errors should be fully reproducible and use datasets built into R or the tidyverse so that I can run the code and fix them in R. Where necessary, give me the code to load any packages or datasets that I will need.\n\n\nDon’t give me questions until I have given you the ILOs and functions I wanted to test. Give me only 1 question at a time and mix up the topic of each question.\n\nThe final instruction is added because the AI will occasionally get ahead of itself and it’s more useful to control the output.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice testing</span>"
    ]
  },
  {
    "objectID": "03-testing.html#built-in-datasets",
    "href": "03-testing.html#built-in-datasets",
    "title": "\n3  Practice testing\n",
    "section": "\n3.3 Built-in datasets",
    "text": "3.3 Built-in datasets\nAs an aside, built-in datasets in R are sample datasets that come pre-loaded with the R software installation. They provide a convenient way to practice data manipulation, analysis, and visualization techniques without needing to import external data files. These datasets cover various domains and can be helpful for learning and demonstrating R functionalities.\nYou can get a full list of all the built-in datasets available to you by running the command data() in the console. Base R comes with datasets built in but when you install extra packages they also sometimes have extra datasets, for example, the tidyverse has a lot of extra datasets. A package needs to be loaded for you to use any datasets from it, or for them to show up in the list when you run data().\n\n# see list of datasets\ndata()\n\n# load tidyverse to get access to extra sets\nlibrary(tidyverse)\n\n# load in dataset to environment so it can be used\ndata(\"starwars\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice testing</span>"
    ]
  },
  {
    "objectID": "03-testing.html#activity-3-content-prompt",
    "href": "03-testing.html#activity-3-content-prompt",
    "title": "\n3  Practice testing\n",
    "section": "\n3.4 Activity 3: Content prompt",
    "text": "3.4 Activity 3: Content prompt\nNow give it the learning outcomes, list of functions, and glossary terms you want it to quiz you on. You don’t need to worry about copying and pasting these over with nice formatting, just dump it all in. For example, for Applied Data Skills Chapter 3, this is what I provided:\n\nIntended Learning Outcomes Be able to identify categorical versus continuous data Be able to create plots in layers using ggplot Be able to choose appropriate plots for data 3.1 Functions used aes(), as.numeric(), c(), col_character(), col_datetime(), col_double(), col_factor(), col_integer(), cols(), coord_cartesian(), count(), element_blank(), facet_wrap(), factor(), geom_bar(), geom_boxplot(), geom_col(), geom_histogram(), geom_jitter(), geom_point(), geom_smooth(), ggplot(), ggtitle(), glimpse(), guides(), mean(), now(), plot_layout(), read_csv(), rgb(), scale_fill_manual(), scale_x_continuous(), scale_x_date(), scale_x_discrete(), scale_y_continuous(), seq(), spec(), stat_summary(), theme(), theme_bw(), theme_gdocs(), theme_set(), today()\n\n\n3.7 Glossary termdefinitionargumentA variable that provides input to a function.categoricalData that can only take certain values, such as types of pet.categoricalData that can only take certain values, such as types of pet.characterA data type representing strings of text.chunkA section of code in an R Markdown filecontinuousData that can take on any values between other existing values.continuousData that can take on any values between other existing values.data-typeThe kind of data represented by an object.default-valueA value that a function uses for an argument if it is skipped.doubleA data type representing a real decimal numberfactorA data type where a specific set of values are stored with labels; An explanatory variable manipulated by the experimentergeomThe geometric style in which data are displayed, such as boxplot, density, or histogram.integerA data type representing whole numbers.knitTo create an HTML, PDF, or Word document from an R Markdown (Rmd) documentlikertA rating scale with a small number of discrete points in orderlogicalA data type representing TRUE or FALSE values.medianThe middle number in a distribution where half of the values are larger and half are smaller.nominalCategorical variables that don’t have an inherent order, such as types of animal.numericA data type representing a real decimal number or integer.observationAll of the data about a single trial or question.ordinalDiscrete variables that have an inherent order, such as level of education or dislike/like.outlierA data point that is extremely distant from most of the other data pointsr-markdownThe R-specific version of markdown: a way to specify formatting, such as headers, paragraphs, lists, bolding, and links, as well as code blocks and inline code.stringA piece of text inside of quotes.tidy-dataA format for data that maps the meaning onto the structure.valueA single number or piece of data.variable(coding): A word that identifies and stores the value of some data for later use; (stats): An attribute or characteristic of an observation that you can measure, count, or describevectorA type of data structure that collects values with the same data type, like T/F values, numbers, or strings.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice testing</span>"
    ]
  },
  {
    "objectID": "03-testing.html#activity-4-generating-questions",
    "href": "03-testing.html#activity-4-generating-questions",
    "title": "\n3  Practice testing\n",
    "section": "\n3.5 Activity 4: Generating questions",
    "text": "3.5 Activity 4: Generating questions\nYou should now be able to ask it to generate questions for you by typing mcq or coding problem. A few other prompts to consider:\n\nMore like this\nGive me a harder/easier question\nCoding problem about stat_summary()",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice testing</span>"
    ]
  },
  {
    "objectID": "03-testing.html#cautions-and-caveats",
    "href": "03-testing.html#cautions-and-caveats",
    "title": "\n3  Practice testing\n",
    "section": "\n3.6 Cautions and caveats",
    "text": "3.6 Cautions and caveats\nThe questions it generates are generally helpful, but not always. Here’s the issues I’ve come across whilst writing this book that I have not been able to prevent entirely by tweaking my prompts.\n\n3.6.1 Mulitple-choice questions\n\nSometimes it is just plain wrong. The answer here should be C. If you tell it that it is wrong, it can correct itself. But just bear this in mind if you ever use it to write code that AI does not know anything, it’s just a very sophisticated parrott. \nIt may ask you questions about functions you’ve haven’t covered in the course.\nIt may give you a question where there are multiple correct answers without indicating this is the case, which can be confusing.\nIt may focus too much on certain topics of functions and you have to ask it to give you questions on a topic/function specifically.\n\n3.6.2 Coding problems\n\nIt suggests using a built-in dataset that doesn’t exist. In this case, tell it that’s the case and it will suggest a different dataset for the problem.\nThe example it gives isn’t fully reproducible so you have to write the code without being able to run it in R. For example, it assumes you have a dataset with columns named “number” and “price”, but loads no such dataset, so you can’t actually try out the code. It’s still possible to write the code, but without being able to run it, much more difficult, particularly as a beginner.\n\n3.6.3 Error mode\n\nThis is the category the AI struggled with the most, to the point where at the time of writing, I can’t say that it’s up to the task. I have tried writing the prompts mulitple times and whilst I have seen some improvement, it’s not consistent. I have a premium ChatGPT subscription and I also tried using GPT4.0 and it didn’t help. I’ve decided to leave it in this book because it’s a useful cautionary tale of the limits of AI.\nFrom a learning and teaching perspective, it’s a good example of why teaching might actually be a skill and my job might be safe after all. When we use Error Mode type questions in our courses, we design the errors so that they’re common mistakes learners make at that point in their journey, they’re mistakes that learners would plausibly make, and solving them will teach you something of use. Even when the AI managed to create an accurate error mode problem, it still wasn’t helpful for learning.\nIn my initial attempts at prompting, Gemini did poorly at this. It gave me code that did not have errors, or it would tell me what the errors were, or it would give errors that were so obvious they wouldn’t help you learn at all. For example:\n\n - I then updated the prompt to say that the errors should be plausible and not to tell me what the errors were. This helped but only sometimes. - ChatGPT fared slightly better although all of the problems were very basic and of the same type (creating a vector) until I asked it to give me me a specific problem (e.g., error mode for ggplot). - ChatGPT also suffered from the same problems as Gemini in that it would tell you what the error was or produce code that did not have any errors. I particularly enjoyed this response whereby it seemed to pretend that it was doing it on purpose as a teachable moment. I know I am anthropomorphising the AI here but I imagine any educator will feel a sense of kinship at trying to make your mistakes seem intentional.\n\n\nIt often won’t tell you what built-in dataset you need to load to run the code (and this isn’t the intended error). Unless you have a working knowledge of built-in datasets in R and the packages they’re from, this is unnecessarily confusing.\nThere is no prompt I can give Copilot that will result in it producing code with an error (even when the same prompt works with ChatGPT). So I gave up.\n\n\n\n\n\n\n\n\nCaution\n\n\n\nThis book should be considered a living document and is likely to change over time. Given the brave new world in which we now live, all constructive feedback and suggestions are welcome! If you have any feedback or suggestions, please provide it via Forms.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practice testing</span>"
    ]
  },
  {
    "objectID": "04-errors.html",
    "href": "04-errors.html",
    "title": "\n4  Error checking and debugging\n",
    "section": "",
    "text": "4.1 Activity 1: Set-up\nWe don’t acUnlike the other chapters you don’t need to do any set-up, in fact, you can often just copy and paste the code and error in and it will figure out that you want it to fix it without even needing to explicitly ask.\nSo that you can reproduce the same errors, let’s create a reproducible example and load some packages and a dataset. Open an Rmd (not a script, we’ll use the Rmd in Activity 3) and run the below.\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(palmerpenguins)\n\nWarning: package 'palmerpenguins' was built under R version 4.3.3\n\ndata(\"penguins\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Error checking and debugging</span>"
    ]
  },
  {
    "objectID": "04-errors.html#sec-setup-errors",
    "href": "04-errors.html#sec-setup-errors",
    "title": "\n4  Error checking and debugging\n",
    "section": "\n4.2 Activity 1: Simple errors",
    "text": "4.2 Activity 1: Simple errors\nUnlike the other chapters you don’t need to do any set-up, in fact, you can often just copy and paste the code and error in and it will figure out that you want it to fix it without even needing to explicitly ask.\nHere’s a simple error where we have given it the wrong function name:\n\nggplot(penguins, aes(x = species)) +\n   geom_barchart()\n\nError in geom_barchart(): could not find function \"geom_barchart\"\n\n\n\nGive the AI both the code you and the error. One without the other is likely to result in a poor or incomplete answer (whether you ask a human or an AI).\n\nAll three AIs identified, explained, and fixed this error. Gemini also tried to give some additional information about the function and with a link to more information, which is nice.\n\n\n\n\nFixing a simple error",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Error checking and debugging</span>"
    ]
  },
  {
    "objectID": "04-errors.html#activity-2-contextual-errors",
    "href": "04-errors.html#activity-2-contextual-errors",
    "title": "\n4  Error checking and debugging\n",
    "section": "\n4.3 Activity 2: Contextual errors",
    "text": "4.3 Activity 2: Contextual errors\nSomething that catches many people out is when the error is actually being caused by your code further up your script rather than the bit that is actually causing the error.\nFor example, in this code, what we intend to do is create a dataset that just has penguins from Biscoe Island and then calculate the mean body mass. This code will run, but it produces NaN as the value.\n\nbiscoe_penguins &lt;- penguins %&gt;%\n  filter(island == \"biscoe\")\n\nbiscoe_penguins %&gt;%\n  summarise(mean_mass = mean(body_mass_g))\n\n\n\n\nmean_mass\n\n\nNaN\n\n\n\n\n\nIf you just give it the code and the table and ask it to explain what’s happening, it will do it’s best but without knowing the dataset or what code has preceded it, it won’t give you the exact answer, although in this case it hints at it.\n\n\n\n\nChatGPT giving it the best guess\n\n\n\nThere’s a few things you can do at this point:\n\nGive it all the code you’ve used so far\nRun str(penguins) and str(biscoe_penguins) and also give it the structure of the datasets\n\nIf you haven’t spotted it by now, the error is that in the filter biscoe should be Biscoe with a capital B. It still doesn’t have the information it needs to tell you this explicitly, but it will get you very close. There is no shortcut for knowing your data.\n\n\n\n\nCopilot getting very close",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Error checking and debugging</span>"
    ]
  },
  {
    "objectID": "04-errors.html#activity-3-rmd-errors",
    "href": "04-errors.html#activity-3-rmd-errors",
    "title": "\n4  Error checking and debugging\n",
    "section": "\n4.4 Activity 3: Rmd errors",
    "text": "4.4 Activity 3: Rmd errors\nIf you’re working in R Markdown or Quarto, sometimes the errors will stem from your code chunk settings or YAML.\nIn your Rmd file, create a new code chunk and paste the following:\n\npenguins %&gt;%\n  count()\n\nBut then delete one of the final back ticks from the code chunk.\nThe code is fine, it provides a simple count of the number of observations in the dataset. But if you try and knit the file, you’ll get a long ! attempt to use zero-length variable name. Copilot wasn’t that helpful because all of its suggestions relate to checking your code:\n\n\n\n\nMissing the mark\n\n\n\nHowever, Gemini was more useful as one of its suggestions is indeed the solution - there’s a missing back tick at the end of the code chunk. In cases like this, it won’t give you a solution you can copy and paste but it will tell you what to go and look for.\n\n\n\n\nMissing backticks\n\n\n\n\n\n\n\n\n\nCaution\n\n\n\nThis book should be considered a living document and is likely to change over time. Given the brave new world in which we now live, all constructive feedback and suggestions are welcome! If you have any feedback or suggestions, please provide it via Forms.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Error checking and debugging</span>"
    ]
  },
  {
    "objectID": "05-review.html",
    "href": "05-review.html",
    "title": "5  Code review & Comments",
    "section": "",
    "text": "Caution\n\n\n\nThis chapter is under construction.\n\n\nIn this chapter you’ll learn how to use AI to perform a code check and to add comments to your code. As you’ve already hopefully learned by working through this book, you have to be critical about anything the AI produces or suggests because it has no expert knowledge, but it can be a useful tool for checking and improving your code.\nThe principles of this chapter are taken from DeBruine et al’s Code Check Guide. When we refer to a code check, these are the types of things we mean:\n\nDoes it run? Can a researcher who uses that progamming language run it easily? Are any unusual or complex procedures explained?\nIs it reproducible? Do you get the same outputs? Is it straightforward to check them?\nIs it auditable/understandable? Even if you don’t have the expertise to assess the stats or data processing, is the code well-organised enough to figure out what is intended so mistakes could be detected? Are the outputs sufficiently detailed to allow interrogation?\nDoes it follow best practices? Is there too much repeated code that could benefit from modularisation? DRY (Don’t repeat yourself) and SPOT (Single Point of Truth)? Are the outputs of long processes saved and loaded from file? Are there unit tests? Do the variable names make sense? Do the results match what is shown in the output and there is no rounding up or down?\nIs it correct and appropriate? Is the code actually doing what is intended? Is what is intended correct? Some logical problems can be caught without domain knowledge, such as intending to to filter out male subjects, but actually filtering them IN. Many other problems require domain and/or statistical knowledge, so may only be appropriate in some circumstances.\n\nAs a beginner coder, the limited complexity of your code means that some of the above won’t always apply. Additionally, in the ways we’re using AI, it’s not possible to get it to do some of the steps. For example, “Is it reproducible?” would require it to actually analyse the data and even if the platform has the capability you should never give it your data.\nThis process of code reviews involves a lot more back-and-forth than the other chapters, so we’ll give you the general idea, some starting prompts, and a few examples, but you’ll also just need to spend some time shaping what you want from the response.\n\n\n\n\n\n\nCaution\n\n\n\nThis book should be considered a living document and is likely to change over time. Given the brave new world in which we now live, all constructive feedback and suggestions are welcome! If you have any feedback or suggestions, please provide it via Forms.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Code review & Comments</span>"
    ]
  },
  {
    "objectID": "06-writing.html",
    "href": "06-writing.html",
    "title": "6  Writing Code with AI",
    "section": "",
    "text": "Caution\n\n\n\nThis chapter is under construction.\n\n\n\n\n\n\n\n\nCaution\n\n\n\nThis book should be considered a living document and is likely to change over time. Given the brave new world in which we now live, all constructive feedback and suggestions are welcome! If you have any feedback or suggestions, please provide it via Forms.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Writing Code with AI</span>"
    ]
  },
  {
    "objectID": "webexercises.html",
    "href": "webexercises.html",
    "title": "Appendix A — Webexercises",
    "section": "",
    "text": "A.1 Example Questions",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Webexercises</span>"
    ]
  },
  {
    "objectID": "webexercises.html#example-questions",
    "href": "webexercises.html#example-questions",
    "title": "Appendix A — Webexercises",
    "section": "",
    "text": "A.1.1 Fill-In-The-Blanks (fitb())\nCreate fill-in-the-blank questions using fitb(), providing the answer as the first argument.\n\n2 + 2 is \n\n\nYou can also create these questions dynamically, using variables from your R session.\n\nThe square root of 25 is: \n\n\nThe blanks are case-sensitive; if you don’t care about case, use the argument ignore_case = TRUE.\n\nWhat is the letter after D? \n\n\nIf you want to ignore differences in whitespace use, use the argument ignore_ws = TRUE (which is the default) and include spaces in your answer anywhere they could be acceptable.\n\nHow do you load the tidyverse package? \n\n\nYou can set more than one possible correct answer by setting the answers as a vector.\n\nType a vowel: \n\n\nYou can use regular expressions to test answers against more complex rules.\n\nType any 3 letters: \n\n\nA.1.2 Multiple Choice (mcq())\n\n“Never gonna give you up, never gonna: \nlet you go\nturn you down\nrun away\nlet you down”\n“I \nbless the rains\nguess it rains\nsense the rain down in Africa” -Toto\n\nA.1.3 True or False (torf())\n\nTrue or False? You can permute values in a vector using sample(). \nTRUE\nFALSE\n\n\nA.1.4 Longer MCQs (longmcq())\nWhen your answers are very long, sometimes a drop-down select box gets formatted oddly. You can use longmcq() to deal with this. Since the answers are long, It’s probably best to set up the options inside an R chunk with echo=FALSE.\nWhat is a p-value?\n\nthe probability that the null hypothesis is truethe probability of the observed, or more extreme, data, under the assumption that the null-hypothesis is truethe probability of making an error in your conclusion\n\nWhat is true about a 95% confidence interval of the mean?\n\nthere is a 95% probability that the true mean lies within this rangeif you repeated the process many times, 95% of intervals calculated in this way contain the true mean95% of the data fall within this range",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Webexercises</span>"
    ]
  },
  {
    "objectID": "webexercises.html#checked-sections",
    "href": "webexercises.html#checked-sections",
    "title": "Appendix A — Webexercises",
    "section": "\nA.2 Checked sections",
    "text": "A.2 Checked sections\nCreate sections with the class webex-check to add a button that hides feedback until it is pressed. Add the class webex-box to draw a box around the section (or use your own styles).\n\nI am going to learn a lot: \nTRUE\nFALSE\nWhat is a p-value?\n\nthe probability that the null hypothesis is truethe probability of the observed, or more extreme, data, under the assumption that the null-hypothesis is truethe probability of making an error in your conclusion",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Webexercises</span>"
    ]
  },
  {
    "objectID": "webexercises.html#hidden-solutions-and-hints",
    "href": "webexercises.html#hidden-solutions-and-hints",
    "title": "Appendix A — Webexercises",
    "section": "\nA.3 Hidden solutions and hints",
    "text": "A.3 Hidden solutions and hints\nYou can fence off a solution area that will be hidden behind a button using hide() before the solution and unhide() after, each as inline R code. Pass the text you want to appear on the button to the hide() function.\nIf the solution is a code chunk, instead of using hide() and unhide(), simply set the webex.hide chunk option to TRUE, or set it to the string you wish to display on the button.\nRecreate the scatterplot below, using the built-in cars dataset.\n\n\n\n\n\n\n\n\n\n\nI need a hint\n\nSee the documentation for plot() (?plot)\n\n\n\n\n\nClick here to see the solution\n\nplot(cars$speed, cars$dist)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Webexercises</span>"
    ]
  }
]